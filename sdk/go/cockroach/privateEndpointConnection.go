// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cockroach

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-cockroach/sdk/go/cockroach/internal"
)

// Private endpoint connections allow customer applications to connect to a CockroachDB Cloud cluster without traversing the public internet. All application-database traffic remains within the cloud-provider network.
//
// ## Import
//
// format: <cluster id>:<connection id>
//
// ```sh
// $ pulumi import cockroach:index/privateEndpointConnection:PrivateEndpointConnection resource_name 1f69fdd2-600a-4cfc-a9ba-16995df0d77d:vpce-0c1308d7312217abc
// ```
type PrivateEndpointConnection struct {
	pulumi.CustomResourceState

	// Cloud provider associated with this connection.
	CloudProvider pulumi.StringOutput `pulumi:"cloudProvider"`
	ClusterId     pulumi.StringOutput `pulumi:"clusterId"`
	// Client side ID of the Private Endpoint Connection.
	EndpointId pulumi.StringOutput `pulumi:"endpointId"`
	// Cloud provider region code associated with this connection.
	RegionName pulumi.StringOutput `pulumi:"regionName"`
	// Server side ID of the Private Endpoint Connection.
	ServiceId pulumi.StringOutput `pulumi:"serviceId"`
}

// NewPrivateEndpointConnection registers a new resource with the given unique name, arguments, and options.
func NewPrivateEndpointConnection(ctx *pulumi.Context,
	name string, args *PrivateEndpointConnectionArgs, opts ...pulumi.ResourceOption) (*PrivateEndpointConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.EndpointId == nil {
		return nil, errors.New("invalid value for required argument 'EndpointId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PrivateEndpointConnection
	err := ctx.RegisterResource("cockroach:index/privateEndpointConnection:PrivateEndpointConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrivateEndpointConnection gets an existing PrivateEndpointConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrivateEndpointConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrivateEndpointConnectionState, opts ...pulumi.ResourceOption) (*PrivateEndpointConnection, error) {
	var resource PrivateEndpointConnection
	err := ctx.ReadResource("cockroach:index/privateEndpointConnection:PrivateEndpointConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrivateEndpointConnection resources.
type privateEndpointConnectionState struct {
	// Cloud provider associated with this connection.
	CloudProvider *string `pulumi:"cloudProvider"`
	ClusterId     *string `pulumi:"clusterId"`
	// Client side ID of the Private Endpoint Connection.
	EndpointId *string `pulumi:"endpointId"`
	// Cloud provider region code associated with this connection.
	RegionName *string `pulumi:"regionName"`
	// Server side ID of the Private Endpoint Connection.
	ServiceId *string `pulumi:"serviceId"`
}

type PrivateEndpointConnectionState struct {
	// Cloud provider associated with this connection.
	CloudProvider pulumi.StringPtrInput
	ClusterId     pulumi.StringPtrInput
	// Client side ID of the Private Endpoint Connection.
	EndpointId pulumi.StringPtrInput
	// Cloud provider region code associated with this connection.
	RegionName pulumi.StringPtrInput
	// Server side ID of the Private Endpoint Connection.
	ServiceId pulumi.StringPtrInput
}

func (PrivateEndpointConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*privateEndpointConnectionState)(nil)).Elem()
}

type privateEndpointConnectionArgs struct {
	ClusterId string `pulumi:"clusterId"`
	// Client side ID of the Private Endpoint Connection.
	EndpointId string `pulumi:"endpointId"`
}

// The set of arguments for constructing a PrivateEndpointConnection resource.
type PrivateEndpointConnectionArgs struct {
	ClusterId pulumi.StringInput
	// Client side ID of the Private Endpoint Connection.
	EndpointId pulumi.StringInput
}

func (PrivateEndpointConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*privateEndpointConnectionArgs)(nil)).Elem()
}

type PrivateEndpointConnectionInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionOutput() PrivateEndpointConnectionOutput
	ToPrivateEndpointConnectionOutputWithContext(ctx context.Context) PrivateEndpointConnectionOutput
}

func (*PrivateEndpointConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnection)(nil)).Elem()
}

func (i *PrivateEndpointConnection) ToPrivateEndpointConnectionOutput() PrivateEndpointConnectionOutput {
	return i.ToPrivateEndpointConnectionOutputWithContext(context.Background())
}

func (i *PrivateEndpointConnection) ToPrivateEndpointConnectionOutputWithContext(ctx context.Context) PrivateEndpointConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionOutput)
}

// PrivateEndpointConnectionArrayInput is an input type that accepts PrivateEndpointConnectionArray and PrivateEndpointConnectionArrayOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionArrayInput` via:
//
//	PrivateEndpointConnectionArray{ PrivateEndpointConnectionArgs{...} }
type PrivateEndpointConnectionArrayInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionArrayOutput() PrivateEndpointConnectionArrayOutput
	ToPrivateEndpointConnectionArrayOutputWithContext(context.Context) PrivateEndpointConnectionArrayOutput
}

type PrivateEndpointConnectionArray []PrivateEndpointConnectionInput

func (PrivateEndpointConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrivateEndpointConnection)(nil)).Elem()
}

func (i PrivateEndpointConnectionArray) ToPrivateEndpointConnectionArrayOutput() PrivateEndpointConnectionArrayOutput {
	return i.ToPrivateEndpointConnectionArrayOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionArray) ToPrivateEndpointConnectionArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionArrayOutput)
}

// PrivateEndpointConnectionMapInput is an input type that accepts PrivateEndpointConnectionMap and PrivateEndpointConnectionMapOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionMapInput` via:
//
//	PrivateEndpointConnectionMap{ "key": PrivateEndpointConnectionArgs{...} }
type PrivateEndpointConnectionMapInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionMapOutput() PrivateEndpointConnectionMapOutput
	ToPrivateEndpointConnectionMapOutputWithContext(context.Context) PrivateEndpointConnectionMapOutput
}

type PrivateEndpointConnectionMap map[string]PrivateEndpointConnectionInput

func (PrivateEndpointConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrivateEndpointConnection)(nil)).Elem()
}

func (i PrivateEndpointConnectionMap) ToPrivateEndpointConnectionMapOutput() PrivateEndpointConnectionMapOutput {
	return i.ToPrivateEndpointConnectionMapOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionMap) ToPrivateEndpointConnectionMapOutputWithContext(ctx context.Context) PrivateEndpointConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionMapOutput)
}

type PrivateEndpointConnectionOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnection)(nil)).Elem()
}

func (o PrivateEndpointConnectionOutput) ToPrivateEndpointConnectionOutput() PrivateEndpointConnectionOutput {
	return o
}

func (o PrivateEndpointConnectionOutput) ToPrivateEndpointConnectionOutputWithContext(ctx context.Context) PrivateEndpointConnectionOutput {
	return o
}

// Cloud provider associated with this connection.
func (o PrivateEndpointConnectionOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateEndpointConnection) pulumi.StringOutput { return v.CloudProvider }).(pulumi.StringOutput)
}

func (o PrivateEndpointConnectionOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateEndpointConnection) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// Client side ID of the Private Endpoint Connection.
func (o PrivateEndpointConnectionOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateEndpointConnection) pulumi.StringOutput { return v.EndpointId }).(pulumi.StringOutput)
}

// Cloud provider region code associated with this connection.
func (o PrivateEndpointConnectionOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateEndpointConnection) pulumi.StringOutput { return v.RegionName }).(pulumi.StringOutput)
}

// Server side ID of the Private Endpoint Connection.
func (o PrivateEndpointConnectionOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateEndpointConnection) pulumi.StringOutput { return v.ServiceId }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrivateEndpointConnection)(nil)).Elem()
}

func (o PrivateEndpointConnectionArrayOutput) ToPrivateEndpointConnectionArrayOutput() PrivateEndpointConnectionArrayOutput {
	return o
}

func (o PrivateEndpointConnectionArrayOutput) ToPrivateEndpointConnectionArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionArrayOutput {
	return o
}

func (o PrivateEndpointConnectionArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PrivateEndpointConnection {
		return vs[0].([]*PrivateEndpointConnection)[vs[1].(int)]
	}).(PrivateEndpointConnectionOutput)
}

type PrivateEndpointConnectionMapOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrivateEndpointConnection)(nil)).Elem()
}

func (o PrivateEndpointConnectionMapOutput) ToPrivateEndpointConnectionMapOutput() PrivateEndpointConnectionMapOutput {
	return o
}

func (o PrivateEndpointConnectionMapOutput) ToPrivateEndpointConnectionMapOutputWithContext(ctx context.Context) PrivateEndpointConnectionMapOutput {
	return o
}

func (o PrivateEndpointConnectionMapOutput) MapIndex(k pulumi.StringInput) PrivateEndpointConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PrivateEndpointConnection {
		return vs[0].(map[string]*PrivateEndpointConnection)[vs[1].(string)]
	}).(PrivateEndpointConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateEndpointConnectionInput)(nil)).Elem(), &PrivateEndpointConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateEndpointConnectionArrayInput)(nil)).Elem(), PrivateEndpointConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateEndpointConnectionMapInput)(nil)).Elem(), PrivateEndpointConnectionMap{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionMapOutput{})
}
