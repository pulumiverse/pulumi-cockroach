// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cockroach

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-cockroach/sdk/go/cockroach/internal"
)

// PrivateEndpointServices contains services that allow for VPC communication, either via PrivateLink (AWS) or Peering (GCP).
type PrivateEndpointServices struct {
	pulumi.CustomResourceState

	ClusterId pulumi.StringOutput                       `pulumi:"clusterId"`
	Services  PrivateEndpointServicesServiceArrayOutput `pulumi:"services"`
}

// NewPrivateEndpointServices registers a new resource with the given unique name, arguments, and options.
func NewPrivateEndpointServices(ctx *pulumi.Context,
	name string, args *PrivateEndpointServicesArgs, opts ...pulumi.ResourceOption) (*PrivateEndpointServices, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PrivateEndpointServices
	err := ctx.RegisterResource("cockroach:index/privateEndpointServices:PrivateEndpointServices", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrivateEndpointServices gets an existing PrivateEndpointServices resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrivateEndpointServices(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrivateEndpointServicesState, opts ...pulumi.ResourceOption) (*PrivateEndpointServices, error) {
	var resource PrivateEndpointServices
	err := ctx.ReadResource("cockroach:index/privateEndpointServices:PrivateEndpointServices", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrivateEndpointServices resources.
type privateEndpointServicesState struct {
	ClusterId *string                          `pulumi:"clusterId"`
	Services  []PrivateEndpointServicesService `pulumi:"services"`
}

type PrivateEndpointServicesState struct {
	ClusterId pulumi.StringPtrInput
	Services  PrivateEndpointServicesServiceArrayInput
}

func (PrivateEndpointServicesState) ElementType() reflect.Type {
	return reflect.TypeOf((*privateEndpointServicesState)(nil)).Elem()
}

type privateEndpointServicesArgs struct {
	ClusterId string `pulumi:"clusterId"`
}

// The set of arguments for constructing a PrivateEndpointServices resource.
type PrivateEndpointServicesArgs struct {
	ClusterId pulumi.StringInput
}

func (PrivateEndpointServicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*privateEndpointServicesArgs)(nil)).Elem()
}

type PrivateEndpointServicesInput interface {
	pulumi.Input

	ToPrivateEndpointServicesOutput() PrivateEndpointServicesOutput
	ToPrivateEndpointServicesOutputWithContext(ctx context.Context) PrivateEndpointServicesOutput
}

func (*PrivateEndpointServices) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointServices)(nil)).Elem()
}

func (i *PrivateEndpointServices) ToPrivateEndpointServicesOutput() PrivateEndpointServicesOutput {
	return i.ToPrivateEndpointServicesOutputWithContext(context.Background())
}

func (i *PrivateEndpointServices) ToPrivateEndpointServicesOutputWithContext(ctx context.Context) PrivateEndpointServicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointServicesOutput)
}

// PrivateEndpointServicesArrayInput is an input type that accepts PrivateEndpointServicesArray and PrivateEndpointServicesArrayOutput values.
// You can construct a concrete instance of `PrivateEndpointServicesArrayInput` via:
//
//	PrivateEndpointServicesArray{ PrivateEndpointServicesArgs{...} }
type PrivateEndpointServicesArrayInput interface {
	pulumi.Input

	ToPrivateEndpointServicesArrayOutput() PrivateEndpointServicesArrayOutput
	ToPrivateEndpointServicesArrayOutputWithContext(context.Context) PrivateEndpointServicesArrayOutput
}

type PrivateEndpointServicesArray []PrivateEndpointServicesInput

func (PrivateEndpointServicesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrivateEndpointServices)(nil)).Elem()
}

func (i PrivateEndpointServicesArray) ToPrivateEndpointServicesArrayOutput() PrivateEndpointServicesArrayOutput {
	return i.ToPrivateEndpointServicesArrayOutputWithContext(context.Background())
}

func (i PrivateEndpointServicesArray) ToPrivateEndpointServicesArrayOutputWithContext(ctx context.Context) PrivateEndpointServicesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointServicesArrayOutput)
}

// PrivateEndpointServicesMapInput is an input type that accepts PrivateEndpointServicesMap and PrivateEndpointServicesMapOutput values.
// You can construct a concrete instance of `PrivateEndpointServicesMapInput` via:
//
//	PrivateEndpointServicesMap{ "key": PrivateEndpointServicesArgs{...} }
type PrivateEndpointServicesMapInput interface {
	pulumi.Input

	ToPrivateEndpointServicesMapOutput() PrivateEndpointServicesMapOutput
	ToPrivateEndpointServicesMapOutputWithContext(context.Context) PrivateEndpointServicesMapOutput
}

type PrivateEndpointServicesMap map[string]PrivateEndpointServicesInput

func (PrivateEndpointServicesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrivateEndpointServices)(nil)).Elem()
}

func (i PrivateEndpointServicesMap) ToPrivateEndpointServicesMapOutput() PrivateEndpointServicesMapOutput {
	return i.ToPrivateEndpointServicesMapOutputWithContext(context.Background())
}

func (i PrivateEndpointServicesMap) ToPrivateEndpointServicesMapOutputWithContext(ctx context.Context) PrivateEndpointServicesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointServicesMapOutput)
}

type PrivateEndpointServicesOutput struct{ *pulumi.OutputState }

func (PrivateEndpointServicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointServices)(nil)).Elem()
}

func (o PrivateEndpointServicesOutput) ToPrivateEndpointServicesOutput() PrivateEndpointServicesOutput {
	return o
}

func (o PrivateEndpointServicesOutput) ToPrivateEndpointServicesOutputWithContext(ctx context.Context) PrivateEndpointServicesOutput {
	return o
}

func (o PrivateEndpointServicesOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateEndpointServices) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

func (o PrivateEndpointServicesOutput) Services() PrivateEndpointServicesServiceArrayOutput {
	return o.ApplyT(func(v *PrivateEndpointServices) PrivateEndpointServicesServiceArrayOutput { return v.Services }).(PrivateEndpointServicesServiceArrayOutput)
}

type PrivateEndpointServicesArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointServicesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrivateEndpointServices)(nil)).Elem()
}

func (o PrivateEndpointServicesArrayOutput) ToPrivateEndpointServicesArrayOutput() PrivateEndpointServicesArrayOutput {
	return o
}

func (o PrivateEndpointServicesArrayOutput) ToPrivateEndpointServicesArrayOutputWithContext(ctx context.Context) PrivateEndpointServicesArrayOutput {
	return o
}

func (o PrivateEndpointServicesArrayOutput) Index(i pulumi.IntInput) PrivateEndpointServicesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PrivateEndpointServices {
		return vs[0].([]*PrivateEndpointServices)[vs[1].(int)]
	}).(PrivateEndpointServicesOutput)
}

type PrivateEndpointServicesMapOutput struct{ *pulumi.OutputState }

func (PrivateEndpointServicesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrivateEndpointServices)(nil)).Elem()
}

func (o PrivateEndpointServicesMapOutput) ToPrivateEndpointServicesMapOutput() PrivateEndpointServicesMapOutput {
	return o
}

func (o PrivateEndpointServicesMapOutput) ToPrivateEndpointServicesMapOutputWithContext(ctx context.Context) PrivateEndpointServicesMapOutput {
	return o
}

func (o PrivateEndpointServicesMapOutput) MapIndex(k pulumi.StringInput) PrivateEndpointServicesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PrivateEndpointServices {
		return vs[0].(map[string]*PrivateEndpointServices)[vs[1].(string)]
	}).(PrivateEndpointServicesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateEndpointServicesInput)(nil)).Elem(), &PrivateEndpointServices{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateEndpointServicesArrayInput)(nil)).Elem(), PrivateEndpointServicesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateEndpointServicesMapInput)(nil)).Elem(), PrivateEndpointServicesMap{})
	pulumi.RegisterOutputType(PrivateEndpointServicesOutput{})
	pulumi.RegisterOutputType(PrivateEndpointServicesArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointServicesMapOutput{})
}
