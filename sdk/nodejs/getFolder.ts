// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * A CockroachDB Cloud folder. Folders can contain clusters or other folders.  They can be used to group resources together for the purposes of access control, organization or fine grained invoicing.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cockroach from "@pulumi/cockroach";
 *
 * const config = new pulumi.Config();
 * const prodFolderId = config.require("prodFolderId");
 * const team1 = cockroach.getFolder({
 *     path: "/prod/team1",
 * });
 * const prod = cockroach.getFolder({
 *     id: prodFolderId,
 * });
 * ```
 */
export function getFolder(args?: GetFolderArgs, opts?: pulumi.InvokeOptions): Promise<GetFolderResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cockroach:index/getFolder:getFolder", {
        "id": args.id,
        "path": args.path,
    }, opts);
}

/**
 * A collection of arguments for invoking getFolder.
 */
export interface GetFolderArgs {
    /**
     * The id the folder.
     */
    id?: string;
    /**
     * An absolute path to the folder. Trailing slashes are optional. (i.e. /folder1/folder2)
     */
    path?: string;
}

/**
 * A collection of values returned by getFolder.
 */
export interface GetFolderResult {
    /**
     * The id the folder.
     */
    readonly id?: string;
    /**
     * Name of the folder.
     */
    readonly name: string;
    /**
     * The ID of the folders's parent folder. 'root' is used for a folder at the root level.
     */
    readonly parentId: string;
    /**
     * An absolute path to the folder. Trailing slashes are optional. (i.e. /folder1/folder2)
     */
    readonly path?: string;
}
/**
 * A CockroachDB Cloud folder. Folders can contain clusters or other folders.  They can be used to group resources together for the purposes of access control, organization or fine grained invoicing.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cockroach from "@pulumi/cockroach";
 *
 * const config = new pulumi.Config();
 * const prodFolderId = config.require("prodFolderId");
 * const team1 = cockroach.getFolder({
 *     path: "/prod/team1",
 * });
 * const prod = cockroach.getFolder({
 *     id: prodFolderId,
 * });
 * ```
 */
export function getFolderOutput(args?: GetFolderOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFolderResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cockroach:index/getFolder:getFolder", {
        "id": args.id,
        "path": args.path,
    }, opts);
}

/**
 * A collection of arguments for invoking getFolder.
 */
export interface GetFolderOutputArgs {
    /**
     * The id the folder.
     */
    id?: pulumi.Input<string>;
    /**
     * An absolute path to the folder. Trailing slashes are optional. (i.e. /folder1/folder2)
     */
    path?: pulumi.Input<string>;
}
