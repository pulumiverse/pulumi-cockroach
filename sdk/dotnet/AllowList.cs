// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cockroach
{
    /// <summary>
    /// List of IP ranges allowed to access the cluster.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cockroach = Pulumiverse.Cockroach;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var vpn = new Cockroach.AllowList("vpn", new()
    ///     {
    ///         Name = "vpn",
    ///         CidrIp = "123.123.1.1",
    ///         CidrMask = 32,
    ///         Ui = true,
    ///         Sql = true,
    ///         ClusterId = staging.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// format: &lt;cluster id&gt;:&lt;cidr ip&gt;/&lt;cidr mask&gt;
    /// 
    /// ```sh
    /// $ pulumi import cockroach:index/allowList:AllowList home_office 1f69fdd2-600a-4cfc-a9ba-16995df0d77d:123.123.1.1/32
    /// ```
    /// </summary>
    [CockroachResourceType("cockroach:index/allowList:AllowList")]
    public partial class AllowList : global::Pulumi.CustomResource
    {
        /// <summary>
        /// IP address component of the [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation) range for this entry.
        /// </summary>
        [Output("cidrIp")]
        public Output<string> CidrIp { get; private set; } = null!;

        /// <summary>
        /// Map component of the [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation) range for this entry.
        /// </summary>
        [Output("cidrMask")]
        public Output<int> CidrMask { get; private set; } = null!;

        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// Name of this allowlist entry.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// Set to 'true' to allow SQL connections from this CIDR range.
        /// </summary>
        [Output("sql")]
        public Output<bool> Sql { get; private set; } = null!;

        /// <summary>
        /// Set to 'true' to allow access to the management console from this CIDR range.
        /// </summary>
        [Output("ui")]
        public Output<bool> Ui { get; private set; } = null!;


        /// <summary>
        /// Create a AllowList resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AllowList(string name, AllowListArgs args, CustomResourceOptions? options = null)
            : base("cockroach:index/allowList:AllowList", name, args ?? new AllowListArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AllowList(string name, Input<string> id, AllowListState? state = null, CustomResourceOptions? options = null)
            : base("cockroach:index/allowList:AllowList", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AllowList resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AllowList Get(string name, Input<string> id, AllowListState? state = null, CustomResourceOptions? options = null)
        {
            return new AllowList(name, id, state, options);
        }
    }

    public sealed class AllowListArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// IP address component of the [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation) range for this entry.
        /// </summary>
        [Input("cidrIp", required: true)]
        public Input<string> CidrIp { get; set; } = null!;

        /// <summary>
        /// Map component of the [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation) range for this entry.
        /// </summary>
        [Input("cidrMask", required: true)]
        public Input<int> CidrMask { get; set; } = null!;

        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// Name of this allowlist entry.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Set to 'true' to allow SQL connections from this CIDR range.
        /// </summary>
        [Input("sql", required: true)]
        public Input<bool> Sql { get; set; } = null!;

        /// <summary>
        /// Set to 'true' to allow access to the management console from this CIDR range.
        /// </summary>
        [Input("ui", required: true)]
        public Input<bool> Ui { get; set; } = null!;

        public AllowListArgs()
        {
        }
        public static new AllowListArgs Empty => new AllowListArgs();
    }

    public sealed class AllowListState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// IP address component of the [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation) range for this entry.
        /// </summary>
        [Input("cidrIp")]
        public Input<string>? CidrIp { get; set; }

        /// <summary>
        /// Map component of the [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation) range for this entry.
        /// </summary>
        [Input("cidrMask")]
        public Input<int>? CidrMask { get; set; }

        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// Name of this allowlist entry.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Set to 'true' to allow SQL connections from this CIDR range.
        /// </summary>
        [Input("sql")]
        public Input<bool>? Sql { get; set; }

        /// <summary>
        /// Set to 'true' to allow access to the management console from this CIDR range.
        /// </summary>
        [Input("ui")]
        public Input<bool>? Ui { get; set; }

        public AllowListState()
        {
        }
        public static new AllowListState Empty => new AllowListState();
    }
}
