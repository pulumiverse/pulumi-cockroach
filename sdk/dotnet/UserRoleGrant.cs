// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cockroach
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// Cluster and folder level role grants can be imported using:
    /// 
    /// &lt;user_id&gt;,&lt;role_name&gt;,&lt;resource_type&gt;,&lt;resource_id&gt;
    /// 
    /// ```sh
    /// $ pulumi import cockroach:index/userRoleGrant:UserRoleGrant admin_grant 1f69fdd2-600a-4cfc-a9ba-16995df0d77d,CLUSTER_ADMIN,CLUSTER,9b9d23fe-3848-40b2-a3c5-d8ccb1c4f831
    /// ```
    /// 
    /// Organization level grants can omit the resource_id
    /// 
    /// ```sh
    /// $ pulumi import cockroach:index/userRoleGrant:UserRoleGrant org_level_grant 1f69fdd2-600a-4cfc-a9ba-16995df0d77d,ORG_ADMIN,ORGANIZATION
    /// ```
    /// </summary>
    [CockroachResourceType("cockroach:index/userRoleGrant:UserRoleGrant")]
    public partial class UserRoleGrant : global::Pulumi.CustomResource
    {
        [Output("role")]
        public Output<Outputs.UserRoleGrantRole> Role { get; private set; } = null!;

        /// <summary>
        /// ID of the user to grant these roles to.
        /// </summary>
        [Output("userId")]
        public Output<string> UserId { get; private set; } = null!;


        /// <summary>
        /// Create a UserRoleGrant resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UserRoleGrant(string name, UserRoleGrantArgs args, CustomResourceOptions? options = null)
            : base("cockroach:index/userRoleGrant:UserRoleGrant", name, args ?? new UserRoleGrantArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UserRoleGrant(string name, Input<string> id, UserRoleGrantState? state = null, CustomResourceOptions? options = null)
            : base("cockroach:index/userRoleGrant:UserRoleGrant", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UserRoleGrant resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UserRoleGrant Get(string name, Input<string> id, UserRoleGrantState? state = null, CustomResourceOptions? options = null)
        {
            return new UserRoleGrant(name, id, state, options);
        }
    }

    public sealed class UserRoleGrantArgs : global::Pulumi.ResourceArgs
    {
        [Input("role", required: true)]
        public Input<Inputs.UserRoleGrantRoleArgs> Role { get; set; } = null!;

        /// <summary>
        /// ID of the user to grant these roles to.
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public UserRoleGrantArgs()
        {
        }
        public static new UserRoleGrantArgs Empty => new UserRoleGrantArgs();
    }

    public sealed class UserRoleGrantState : global::Pulumi.ResourceArgs
    {
        [Input("role")]
        public Input<Inputs.UserRoleGrantRoleGetArgs>? Role { get; set; }

        /// <summary>
        /// ID of the user to grant these roles to.
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        public UserRoleGrantState()
        {
        }
        public static new UserRoleGrantState Empty => new UserRoleGrantState();
    }
}
