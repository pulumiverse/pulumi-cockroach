// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cockroach.Outputs
{

    [OutputType]
    public sealed class ClusterDedicated
    {
        /// <summary>
        /// Number of disk I/O operations per second that are permitted on each node in the cluster. Zero indicates the cloud provider-specific default.
        /// </summary>
        public readonly int? DiskIops;
        /// <summary>
        /// Machine type identifier within the given cloud provider, e.g., m6.xlarge, n2-standard-4.
        /// </summary>
        public readonly string? MachineType;
        /// <summary>
        /// Memory per node in GiB.
        /// </summary>
        public readonly double? MemoryGib;
        /// <summary>
        /// Number of virtual CPUs per node in the cluster.
        /// </summary>
        public readonly int? NumVirtualCpus;
        /// <summary>
        /// Set to true to assign private IP addresses to nodes. Required for CMEK and other advanced networking features. Clusters created with this flag will have advanced security features enabled.  This cannot be changed after cluster creation and incurs additional charges.  See [Create an Advanced Cluster](https://www.cockroachlabs.com/docs/cockroachcloud/create-an-advanced-cluster.html#step-6-configure-advanced-security-features) and [Pricing](https://www.cockroachlabs.com/pricing/) for more information.
        /// </summary>
        public readonly bool? PrivateNetworkVisibility;
        /// <summary>
        /// Storage amount per node in GiB.
        /// </summary>
        public readonly int? StorageGib;

        [OutputConstructor]
        private ClusterDedicated(
            int? diskIops,

            string? machineType,

            double? memoryGib,

            int? numVirtualCpus,

            bool? privateNetworkVisibility,

            int? storageGib)
        {
            DiskIops = diskIops;
            MachineType = machineType;
            MemoryGib = memoryGib;
            NumVirtualCpus = numVirtualCpus;
            PrivateNetworkVisibility = privateNetworkVisibility;
            StorageGib = storageGib;
        }
    }
}
