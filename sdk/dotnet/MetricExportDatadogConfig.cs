// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Cockroach
{
    /// <summary>
    /// DataDog metric export configuration for a cluster.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Cockroach = Pulumiverse.Cockroach;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var clusterId = config.Require("clusterId");
    ///     var datadogSite = config.Require("datadogSite");
    ///     var datadogApiKey = config.Require("datadogApiKey");
    ///     var example = new Cockroach.MetricExportDatadogConfig("example", new()
    ///     {
    ///         ClusterId = clusterId,
    ///         Site = datadogSite,
    ///         ApiKey = datadogApiKey,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [CockroachResourceType("cockroach:index/metricExportDatadogConfig:MetricExportDatadogConfig")]
    public partial class MetricExportDatadogConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A Datadog API key.
        /// </summary>
        [Output("apiKey")]
        public Output<string> ApiKey { get; private set; } = null!;

        /// <summary>
        /// Cluster ID.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// The Datadog region to export to.
        /// </summary>
        [Output("site")]
        public Output<string> Site { get; private set; } = null!;

        /// <summary>
        /// Encodes the possible states that a metric export configuration can be in as it is created, deployed, and disabled.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Elaborates on the metric export status and hints at how to fix issues that may have occurred during asynchronous operations.
        /// </summary>
        [Output("userMessage")]
        public Output<string> UserMessage { get; private set; } = null!;


        /// <summary>
        /// Create a MetricExportDatadogConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MetricExportDatadogConfig(string name, MetricExportDatadogConfigArgs args, CustomResourceOptions? options = null)
            : base("cockroach:index/metricExportDatadogConfig:MetricExportDatadogConfig", name, args ?? new MetricExportDatadogConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MetricExportDatadogConfig(string name, Input<string> id, MetricExportDatadogConfigState? state = null, CustomResourceOptions? options = null)
            : base("cockroach:index/metricExportDatadogConfig:MetricExportDatadogConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
                AdditionalSecretOutputs =
                {
                    "apiKey",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MetricExportDatadogConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MetricExportDatadogConfig Get(string name, Input<string> id, MetricExportDatadogConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new MetricExportDatadogConfig(name, id, state, options);
        }
    }

    public sealed class MetricExportDatadogConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("apiKey", required: true)]
        private Input<string>? _apiKey;

        /// <summary>
        /// A Datadog API key.
        /// </summary>
        public Input<string>? ApiKey
        {
            get => _apiKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _apiKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Cluster ID.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// The Datadog region to export to.
        /// </summary>
        [Input("site", required: true)]
        public Input<string> Site { get; set; } = null!;

        public MetricExportDatadogConfigArgs()
        {
        }
        public static new MetricExportDatadogConfigArgs Empty => new MetricExportDatadogConfigArgs();
    }

    public sealed class MetricExportDatadogConfigState : global::Pulumi.ResourceArgs
    {
        [Input("apiKey")]
        private Input<string>? _apiKey;

        /// <summary>
        /// A Datadog API key.
        /// </summary>
        public Input<string>? ApiKey
        {
            get => _apiKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _apiKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Cluster ID.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// The Datadog region to export to.
        /// </summary>
        [Input("site")]
        public Input<string>? Site { get; set; }

        /// <summary>
        /// Encodes the possible states that a metric export configuration can be in as it is created, deployed, and disabled.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Elaborates on the metric export status and hints at how to fix issues that may have occurred during asynchronous operations.
        /// </summary>
        [Input("userMessage")]
        public Input<string>? UserMessage { get; set; }

        public MetricExportDatadogConfigState()
        {
        }
        public static new MetricExportDatadogConfigState Empty => new MetricExportDatadogConfigState();
    }
}
